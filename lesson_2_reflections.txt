What happens when you initialize a repository? Why do you need to do it?
	it creates a git repository in the current folder for the files in it. you need to initialize it so it creates the repository and so you can take snapshots and add them to it

How is the staging area different from the working directory and the repository? What value do you think it offers?
	the staging area is where you put files that you have finshed working on (in the working directory) before commiting them to the repository. It lets you choose the files you want to commit, rtaher than commiting all files each time.

How can you use the staging area to make sure you have one commit per logical change?
	the staging area allows you to selectively commit files by adding only the files that are relevant to
	the specific change 
	
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	branches could be useful when you are trying a new feature and allow you to easily revert if it doesn't work/

How do the diagrams help you visualize the branch structure?
	they show show the different branches and commits in those branches are linked, or not linked, to each other, in a tree like format

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	merging two branches together combines the two branches and any chnages made in them into a single branch. it is represented as the two branches joining rather than a new bramch as this is what is happening, it is not a new branch, rather the two are merged into one

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	pros: quicker than doing manually
	cons: may merge in a way that doesn't produce functional code so need to chek anyway